.\" Automatically generated by Pod::Man 2.22 (Pod::Simple 3.07)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "LOADBARS 1"
.TH LOADBARS 1 "2012-07-23" "loadbars 0.6.0" "User Commands"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
loadbars \- A small and humble tool to observe server loads
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.SS "I like flying elephants"
.IX Subsection "I like flying elephants"
For any startup params help check out \-\-help on command line or 'h' during program
execution.
.SS "A few examples however"
.IX Subsection "A few examples however"
loadbars \-\-extended 1 \-\-showcores 1 \-\-height 300 \-\-hosts localhost
.PP
loadbars \-\-hosts localhost,server1.example.com,server2.example.com
.PP
loadbars \-\-cluster foocluster (foocluster is in /etc/clusters [ClusterSSH])
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Loadbars is a small script that can be used to observe \s-1CPU\s0 loads of several remote servers at once in real time. It connects with \s-1SSH\s0 (using \s-1SSH\s0 public/private key auth) to several servers at once and vizualizes all server CPUs and memory statistics right next each other (either summarized or each core separately). Loadbars is not a tool for collecting \s-1CPU\s0 loads and drawing graphs for later analysis. However, since such tools require a significant amount of time before producing results, Loadbars lets you observe the current state immediately. Loadbars does not remember or record any load information. It just shows the current \s-1CPU\s0 usages like top or vmstat does.
.SH "INFO"
.IX Header "INFO"
.SS "\s-1CPU\s0 stuff"
.IX Subsection "CPU stuff"
st = Steal in % [see man proc] (extended), Color: Red
.PP
gt = Guest in % [see man proc] (extended), Color: Red
.PP
sr = Soft \s-1IRQ\s0 usage in % (extended), Color: White
.PP
ir = \s-1IRQ\s0 usage in % (extended), Color: White
.PP
io = IOwait cpu sage in %, Color: Purple
.PP
id = Idle cpu usage in % (extended), Color: Black
.PP
ni = Nice cpu usage in %, Color: Green
.PP
us = User cpu usage in %, Color: Yellow, dark yellow if to>50%, orange if to>50%
.PP
sy = System cpu sage in %, Color: Blue, lighter blue if >30%
.PP
to = Total \s-1CPU\s0 usage, which is (100% \- id)
.PP
pk = Max us+sy peak of last avg. samples (extended)
.PP
avg = System load average; desc. order: 1, 5 and 15 min. avg.
.PP
1px horizontal line: Maximum sy+us+io of last 'avg' samples (extended)
.PP
Extended means: text display only if extended mode is turned on
.SS "Memory stuff"
.IX Subsection "Memory stuff"
Ram: System ram usage in %, Color: Dark grey
.PP
Swp: System swap usage in %, Color: Grey
.SS "Network stuff"
.IX Subsection "Network stuff"
Rxb: Incoming (received) traffic in %, Color: Light green, normal green if >100% while using low netlink reference. Bar comes from top and is half width.
.PP
Txb: Outgoing (transmitted) traffic in %, Color: Light green, normal green if >100% while using low netlink reference. Bar comes from bottom and is half width.
.PP
When network bar is red: The interface does not exist on the specific remote host.
.PP
\fIConfig file support\fR
.IX Subsection "Config file support"
.PP
Loadbars tries to read ~/.loadbarsrc and it's possible to configure any option you find in \-\-help but without leading '\-\-'. For comments just use the '#' sign. Sample config:
.Sp
.RS 4
showcores=1 # Always show cores on startup
.Sp
showtext=0 # Always don't display text on startup
.Sp
extended=1 # Always use extended mode on startup
.RE
.PP
will always show all \s-1CPU\s0 cores in extended mode but no text display. If you press the 'w' hotkey during program execution your config file will be overwritten using the current settings.
.SH "LICENSE"
.IX Header "LICENSE"
See package description or project website.
.SH "AUTHOR"
.IX Header "AUTHOR"
Paul Buetow \- <http://loadbars.buetow.org>
